#include <winapifamily.h>
/**
 * This file is part of the mingw-w64 runtime package.
 * No warranty is given; refer to the file DISCLAIMER within this package.
 */
#ifndef __NCRYPT_H__
#define __NCRYPT_H__

#ifdef __cplusplus
extern "C" {
#endif

#ifndef WINAPI
# define WINAPI __stdcall
#endif

#ifndef __SECSTATUS_DEFINED__
# define __SECSTATUS_DEFINED__
  typedef LONG SECURITY_STATUS;
#endif

#include <bcrypt.h>

#ifndef HCRYPTPROV_DEFINED
# define HCRYPTPROV_DEFINED
  typedef ULONG_PTR HCRYPTPROV;
  typedef ULONG_PTR HCRYPTKEY;
  typedef ULONG_PTR HCRYPTHASH;
#endif

#define NCRYPT_MAX_KEY_NAME_LENGTH 512
#define NCRYPT_MAX_ALG_ID_LENGTH   512

  typedef LPVOID (WINAPI *PFN_NCRYPT_ALLOC)(SIZE_T cbSize);
  typedef VOID   (WINAPI *PFN_NCRYPT_FREE)(LPVOID pv);

  typedef struct NCRYPT_ALLOC_PARA
  {
    DWORD            cbSize;
    PFN_NCRYPT_ALLOC pfnAlloc;
    PFN_NCRYPT_FREE  pfnFree;
  } NCRYPT_ALLOC_PARA;

#define MS_KEY_STORAGE_PROVIDER            L"Microsoft Software Key Storage Provider"
#define MS_SMART_CARD_KEY_STORAGE_PROVIDER L"Microsoft Smart Card Key Storage Provider"
#define MS_PLATFORM_KEY_STORAGE_PROVIDER   L"Microsoft Platform Crypto Provider"
#define MS_NGC_KEY_STORAGE_PROVIDER        L"Microsoft Passport Key Storage Provider"

#define TPM_RSA_SRK_SEAL_KEY L"MICROSOFT_PCP_KSP_RSA_SEAL_KEY_3BD1C4BF-004E-4E2F-8A4D-0BF633DCB074"

#define NCRYPT_RSA_ALGORITHM               BCRYPT_RSA_ALGORITHM
#define NCRYPT_RSA_SIGN_ALGORITHM          BCRYPT_RSA_SIGN_ALGORITHM
#define NCRYPT_DH_ALGORITHM                BCRYPT_DH_ALGORITHM
#define NCRYPT_DSA_ALGORITHM               BCRYPT_DSA_ALGORITHM
#define NCRYPT_MD2_ALGORITHM               BCRYPT_MD2_ALGORITHM
#define NCRYPT_MD4_ALGORITHM               BCRYPT_MD4_ALGORITHM
#define NCRYPT_MD5_ALGORITHM               BCRYPT_MD5_ALGORITHM
#define NCRYPT_SHA1_ALGORITHM              BCRYPT_SHA1_ALGORITHM
#define NCRYPT_SHA256_ALGORITHM            BCRYPT_SHA256_ALGORITHM
#define NCRYPT_SHA384_ALGORITHM            BCRYPT_SHA384_ALGORITHM
#define NCRYPT_SHA512_ALGORITHM            BCRYPT_SHA512_ALGORITHM
#define NCRYPT_ECDSA_P256_ALGORITHM        BCRYPT_ECDSA_P256_ALGORITHM
#define NCRYPT_ECDSA_P384_ALGORITHM        BCRYPT_ECDSA_P384_ALGORITHM
#define NCRYPT_ECDSA_P521_ALGORITHM        BCRYPT_ECDSA_P521_ALGORITHM
#define NCRYPT_ECDH_P256_ALGORITHM         BCRYPT_ECDH_P256_ALGORITHM
#define NCRYPT_ECDH_P384_ALGORITHM         BCRYPT_ECDH_P384_ALGORITHM
#define NCRYPT_ECDH_P521_ALGORITHM         BCRYPT_ECDH_P521_ALGORITHM
#define NCRYPT_AES_ALGORITHM               BCRYPT_AES_ALGORITHM
#define NCRYPT_RC2_ALGORITHM               BCRYPT_RC2_ALGORITHM
#define NCRYPT_3DES_ALGORITHM              BCRYPT_3DES_ALGORITHM
#define NCRYPT_DES_ALGORITHM               BCRYPT_DES_ALGORITHM
#define NCRYPT_DESX_ALGORITHM              BCRYPT_DESX_ALGORITHM
#define NCRYPT_3DES_112_ALGORITHM          BCRYPT_3DES_112_ALGORITHM
#define NCRYPT_SP800108_CTR_HMAC_ALGORITHM BCRYPT_SP800108_CTR_HMAC_ALGORITHM
#define NCRYPT_SP80056A_CONCAT_ALGORITHM   BCRYPT_SP80056A_CONCAT_ALGORITHM
#define NCRYPT_PBKDF2_ALGORITHM            BCRYPT_PBKDF2_ALGORITHM
#define NCRYPT_CAPI_KDF_ALGORITHM          BCRYPT_CAPI_KDF_ALGORITHM
#define NCRYPT_ECDSA_ALGORITHM             BCRYPT_ECDSA_ALGORITHM
#define NCRYPT_ECDH_ALGORITHM              BCRYPT_ECDH_ALGORITHM

#define NCRYPT_KEY_STORAGE_ALGORITHM L"KEY_STORAGE"
#define NCRYPT_HMAC_SHA256_ALGORITHM L"HMAC-SHA256"

#define NCRYPT_CIPHER_INTERFACE                BCRYPT_CIPHER_INTERFACE
#define NCRYPT_HASH_INTERFACE                  BCRYPT_HASH_INTERFACE
#define NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE
#define NCRYPT_SECRET_AGREEMENT_INTERFACE      BCRYPT_SECRET_AGREEMENT_INTERFACE
#define NCRYPT_SIGNATURE_INTERFACE             BCRYPT_SIGNATURE_INTERFACE
#define NCRYPT_KEY_DERIVATION_INTERFACE        BCRYPT_KEY_DERIVATION_INTERFACE

#define NCRYPT_KEY_STORAGE_INTERFACE        0x00010001
#define NCRYPT_SCHANNEL_INTERFACE           0x00010002
#define NCRYPT_SCHANNEL_SIGNATURE_INTERFACE 0x00010003
#define NCRYPT_KEY_PROTECTION_INTERFACE     0x00010004

#define NCRYPT_RSA_ALGORITHM_GROUP   NCRYPT_RSA_ALGORITHM
#define NCRYPT_DH_ALGORITHM_GROUP    NCRYPT_DH_ALGORITHM
#define NCRYPT_DSA_ALGORITHM_GROUP   NCRYPT_DSA_ALGORITHM
#define NCRYPT_ECDSA_ALGORITHM_GROUP L"ECDSA"
#define NCRYPT_ECDH_ALGORITHM_GROUP  L"ECDH"
#define NCRYPT_AES_ALGORITHM_GROUP   NCRYPT_AES_ALGORITHM
#define NCRYPT_RC2_ALGORITHM_GROUP   NCRYPT_RC2_ALGORITHM
#define NCRYPT_DES_ALGORITHM_GROUP   L"DES"
#define NCRYPT_KEY_DERIVATION_GROUP  L"KEY_DERIVATION"

#define NCRYPTBUFFER_VERSION 0

#define NCRYPTBUFFER_EMPTY                        0
#define NCRYPTBUFFER_DATA                         1
#define NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING 3
#define NCRYPTBUFFER_PROTECTION_FLAGS             4

#define NCRYPTBUFFER_SSL_CLIENT_RANDOM                                 20
#define NCRYPTBUFFER_SSL_SERVER_RANDOM                                 21
#define NCRYPTBUFFER_SSL_HIGHEST_VERSION                               22
#define NCRYPTBUFFER_SSL_CLEAR_KEY                                     23
#define NCRYPTBUFFER_SSL_KEY_ARG_DATA                                  24
#define NCRYPTBUFFER_SSL_SESSION_HASH                                  25
#define NCRYPTBUFFER_PKCS_OID                                          40
#define NCRYPTBUFFER_PKCS_ALG_OID                                      41
#define NCRYPTBUFFER_PKCS_ALG_PARAM                                    42
#define NCRYPTBUFFER_PKCS_ALG_ID                                       43
#define NCRYPTBUFFER_PKCS_ATTRS                                        44
#define NCRYPTBUFFER_PKCS_KEY_NAME                                     45
#define NCRYPTBUFFER_PKCS_SECRET                                       46
#define NCRYPTBUFFER_CERT_BLOB                                         47
#define NCRYPTBUFFER_CLAIM_IDBINDING_NONCE                             48
#define NCRYPTBUFFER_CLAIM_KEYATTESTATION_NONCE                        49
#define NCRYPTBUFFER_KEY_PROPERTY_FLAGS                                50
#define NCRYPTBUFFER_ATTESTATIONSTATEMENT_BLOB                         51
#define NCRYPTBUFFER_ATTESTATION_CLAIM_TYPE                            52
#define NCRYPTBUFFER_ATTESTATION_CLAIM_CHALLENGE_REQUIRED              53
#define NCRYPTBUFFER_ECC_CURVE_NAME                                    60
#define NCRYPTBUFFER_ECC_PARAMETERS                                    61
#define NCRYPTBUFFER_TPM_SEAL_PASSWORD                                 70
#define NCRYPTBUFFER_TPM_SEAL_POLICYINFO                               71
#define NCRYPTBUFFER_TPM_SEAL_TICKET                                   72
#define NCRYPTBUFFER_TPM_SEAL_NO_DA_PROTECTION                         73
#define NCRYPTBUFFER_TPM_PLATFORM_CLAIM_PCR_MASK                       80
#define NCRYPTBUFFER_TPM_PLATFORM_CLAIM_NONCE                          81
#define NCRYPTBUFFER_TPM_PLATFORM_CLAIM_STATIC_CREATE                  82
#define NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_HASH              90
#define NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_SCHEME    91
#define NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_ALGO      92
#define NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_SALT_SIZE 93
#define NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_SALT      NCRYPTBUFFER_ATTESTATION_STATEMENT_SIGNATURE_PADDING_SALT_SIZE
#define NCRYPTBUFFER_ATTESTATION_STATEMENT_NONCE                       NCRYPTBUFFER_CLAIM_KEYATTESTATION_NONCE
#define NCRYPTBUFFER_VBS_ATTESTATION_STATEMENT_ROOT_DETAILS            94
#define NCRYPTBUFFER_VBS_ATTESTATION_STATEMENT_IDENTITY_DETAILS        95

  typedef BCryptBuffer      NCryptBuffer;
  typedef BCryptBuffer     *PNCryptBuffer;
  typedef BCryptBufferDesc  NCryptBufferDesc;
  typedef BCryptBufferDesc *PNCryptBufferDesc;

  typedef ULONG_PTR NCRYPT_HANDLE;
  typedef ULONG_PTR NCRYPT_PROV_HANDLE;
  typedef ULONG_PTR NCRYPT_KEY_HANDLE;
  typedef ULONG_PTR NCRYPT_HASH_HANDLE;
  typedef ULONG_PTR NCRYPT_SECRET_HANDLE;

  typedef struct _NCRYPT_CIPHER_PADDING_INFO
  {
    ULONG  cbSize;
    DWORD  dwFlags;
    PUCHAR pbIV;
    ULONG  cbIV;
    PUCHAR pbOtherInfo;
    ULONG  cbOtherInfo;
  } NCRYPT_CIPHER_PADDING_INFO, *PNCRYPT_CIPHER_PADDING_INFO;

#define NCRYPT_CIPHER_NO_PADDING_FLAG    0x00000000
#define NCRYPT_CIPHER_BLOCK_PADDING_FLAG 0x00000001
#define NCRYPT_CIPHER_OTHER_PADDING_FLAG 0x00000002

#define NCRYPT_PLATFORM_ATTEST_MAGIC 0x44504150

  typedef struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO
  {
    ULONG magic;
    ULONG pcrMask;
  } NCRYPT_PLATFORM_ATTEST_PADDING_INFO;

#define NCRYPT_KEY_ATTEST_MAGIC 0x4450414b

  typedef struct _NCRYPT_KEY_ATTEST_PADDING_INFO
  {
    ULONG  magic;
    PUCHAR pbKeyBlob;
    ULONG  cbKeyBlob;
    PUCHAR pbKeyAuth;
    ULONG  cbKeyAuth;
  } NCRYPT_KEY_ATTEST_PADDING_INFO;

#define NCRYPT_CLAIM_AUTHORITY_ONLY                0x00000001
#define NCRYPT_CLAIM_SUBJECT_ONLY                  0x00000002
#define NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT         0x00000003
#define NCRYPT_CLAIM_VBS_KEY_ATTESTATION_STATEMENT 0x00000004
#define NCRYPT_CLAIM_VBS_ROOT                      0x00000005
#define NCRYPT_CLAIM_VBS_IDENTITY                  0x00000006
#define NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY         0x00000102
#define NCRYPT_CLAIM_UNKNOWN                       0x00001000
#define NCRYPT_CLAIM_PLATFORM                      0x00010000
#define NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY_V2      0x00000103

#define NCRYPT_ISOLATED_KEY_FLAG_CREATED_IN_ISOLATION 0x00000001
#define NCRYPT_ISOLATED_KEY_FLAG_IMPORT_ONLY          0x00000002
#define NCRYPT_ISOLATED_KEY_FLAG_PER_BOOT_KEY         0x00000004
#define NCRYPT_VBS_KEY_FLAG_CREATED_IN_ISOLATION      NCRYPT_ISOLATED_KEY_FLAG_CREATED_IN_ISOLATION
#define NCRYPT_VBS_KEY_FLAG_IMPORT_ONLY               NCRYPT_ISOLATED_KEY_FLAG_IMPORT_ONLY
#define NCRYPT_VBS_KEY_FLAG_PER_BOOT_KEY              NCRYPT_ISOLATED_KEY_FLAG_PER_BOOT_KEY
#define NCRYPT_VBS_KEY_FLAG_IMPORT_EPHEMERAL_ONLY     0x00000008

#define NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_V0              0
#define NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_V0

  typedef struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES
  {
    ULONG Version;
    ULONG Flags;
    ULONG cbPublicKeyBlob;
  } NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES, *PNCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES;

#define NCRYPT_VBS_KEY_ATTESTED_ATTRIBUTES                 NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES
#define PNCRYPT_VBS_KEY_ATTESTED_ATTRIBUTES                PNCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES
#define NCRYPT_VBS_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION

#define NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_V0              0
#define NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_V0

  typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER
  {
    ULONG Version;
    ULONG KeyUsage;
    ULONG PerBootKey : 1;
    ULONG Reserved   : 31;
    ULONG cbAlgName;
    ULONG cbNonce;
    ULONG cbAuthTag;
    ULONG cbWrappingKey;
    ULONG cbIsolatedKey;
  } NCRYPT_EXPORTED_ISOLATED_KEY_HEADER, *PNCRYPT_EXPORTED_ISOLATED_KEY_HEADER;

  typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE
  {
    NCRYPT_EXPORTED_ISOLATED_KEY_HEADER Header;
  } NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE, *PNCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE;

#define NCRYPT_VBS_ROOT_ATTESTATION_HEADER_V0              0
#define NCRYPT_VBS_ROOT_ATTESTATION_HEADER_CURRENT_VERSION NCRYPT_VBS_ROOT_ATTESTATION_HEADER_V0
#define VBS_ROOT_ATTESTATION_HEADER_MAGIC                  0x48435256

  typedef struct _NCRYPT_VBS_ROOT_ATTESTATION_HEADER
  {
    ULONG Magic;
    ULONG Version;
    ULONG cbAttributes;
    ULONG cbNonce;
    ULONG cbReport;
    ULONG cbSignature;
  } NCRYPT_VBS_ROOT_ATTESTATION_HEADER, *PNCRYPT_VBS_ROOT_ATTESTATION_HEADER;

#define NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING_V0              0
#define NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING_CURRENT_VERSION NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING_V0

  typedef struct _NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING
  {
    ULONG Version;
    ULONG ulPaddingScheme;
    ULONG cbHashAlg;
    ULONG ulSalt;
  } NCRYPT_VBS_IDENTITY_ATTESTATION_PADDING, *PNCRYPT_VBS_IDENTITY_ATTESTATION_PADDING;

#define NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER_V0              0
#define NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER_CURRENT_VERSION NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER_V0
#define VBS_IDENTITY_ATTESTATION_HEADER_MAGIC                  0x48434956

  typedef struct _NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER
  {
    ULONG Magic;
    ULONG Version;
    ULONG cbAttributes;
    ULONG cbNonce;
    ULONG cbHashAlg;
    ULONG cbPadding;
    ULONG cbSignatureAlg;
    ULONG cbSignature;
  } NCRYPT_VBS_IDENTITY_ATTESTATION_HEADER, *PNCRYPT_VBS_IDENTITY_ATTESTATION_HEADER;

#define NCRYPT_VBS_KEY_ATTESTATION_STATEMENT_V1              1
#define NCRYPT_VBS_KEY_ATTESTATION_STATEMENT_V2              2
#define NCRYPT_VBS_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION NCRYPT_VBS_KEY_ATTESTATION_STATEMENT_V2
#define VBS_KEY_ATTESTATION_STATEMENT_MAGIC                  0x53414B56

  typedef struct _NCRYPT_VBS_KEY_ATTESTATION_STATEMENT
  {
    ULONG Magic;
    ULONG Version;
    ULONG ClaimType;
  } NCRYPT_VBS_KEY_ATTESTATION_STATEMENT, *PNCRYPT_VBS_KEY_ATTESTATION_STATEMENT;

  typedef struct _NCRYPT_VBS_ROOT_KEY_ATTESTATION_CLAIM_DETAILS
  {
    ULONG     ulKeyFlags;
    ULONGLONG ullTrustletId;
    ULONG     ulTrustletSecurityVersion;
    ULONG     ulTrustletDebuggable;
  } NCRYPT_VBS_ROOT_KEY_ATTESTATION_CLAIM_DETAILS, *PNCRYPT_VBS_ROOT_KEY_ATTESTATION_CLAIM_DETAILS;

  typedef struct _NCRYPT_VBS_IDENTITY_KEY_ATTESTATION_CLAIM_DETAILS
  {
    ULONG   ulKeyFlags;
    LPCWSTR pszSignatureHashAlg;
    ULONG   ulPaddingScheme;
    LPCWSTR pszPaddingHashAlg;
    ULONG   ulPaddingSalt;
  } NCRYPT_VBS_IDENTITY_KEY_ATTESTATION_CLAIM_DETAILS, *PNCRYPT_VBS_IDENTITY_KEY_ATTESTATION_CLAIM_DETAILS;

  typedef struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT
  {
    UINT32 Magic;
    UINT32 Version;
    UINT32 HeaderSize;
    UINT32 cbCertifyInfo;
    UINT32 cbSignature;
    UINT32 cbTpmPublic;
  } NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT, *PNCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT;

#define NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_V0              0
#define NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_V0

  typedef struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT
  {
    ULONG Magic;
    ULONG Version;
    ULONG pcrAlg;
    ULONG cbSignature;
    ULONG cbQuote;
    ULONG cbPcrs;
  } NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT, *PNCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT;

#define NCRYPT_NO_PADDING_FLAG                0x00000001
#define NCRYPT_PAD_PKCS1_FLAG                 0x00000002
#define NCRYPT_PAD_OAEP_FLAG                  0x00000004
#define NCRYPT_PAD_PSS_FLAG                   0x00000008
#define NCRYPT_PAD_CIPHER_FLAG                0x00000010
#define NCRYPT_ATTESTATION_FLAG               0x00000020
#define NCRYPT_SEALING_FLAG                   0x00000100
#define NCRYPT_REGISTER_NOTIFY_FLAG           0x00000001
#define NCRYPT_UNREGISTER_NOTIFY_FLAG         0x00000002
#define NCRYPT_NO_KEY_VALIDATION              BCRYPT_NO_KEY_VALIDATION
#define NCRYPT_MACHINE_KEY_FLAG               0x00000020
#define NCRYPT_SILENT_FLAG                    0x00000040
#define NCRYPT_OVERWRITE_KEY_FLAG             0x00000080
#define NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG 0x00000200
#define NCRYPT_DO_NOT_FINALIZE_FLAG           0x00000400
#define NCRYPT_EXPORT_LEGACY_FLAG             0x00000800
#define NCRYPT_IGNORE_DEVICE_STATE_FLAG       0x00001000
#define NCRYPT_TREAT_NIST_AS_GENERIC_ECC_FLAG 0x00002000
#define NCRYPT_NO_CACHED_PASSWORD             0x00004000
#define NCRYPT_PROTECT_TO_LOCAL_SYSTEM        0x00008000
#define NCRYPT_REQUIRE_KDS_LRPC_BIND_FLAG     0x20000000
#define NCRYPT_PERSIST_ONLY_FLAG              0x40000000
#define NCRYPT_PERSIST_FLAG                   0x80000000
#define NCRYPT_PREFER_VIRTUAL_ISOLATION_FLAG  0x00010000
#define NCRYPT_USE_VIRTUAL_ISOLATION_FLAG     0x00020000
#define NCRYPT_USE_PER_BOOT_KEY_FLAG          0x00040000
#define NCRYPT_PREFER_VBS_FLAG                NCRYPT_PREFER_VIRTUAL_ISOLATION_FLAG
#define NCRYPT_REQUIRE_VBS_FLAG               NCRYPT_USE_VIRTUAL_ISOLATION_FLAG
#define NCRYPT_USE_VBS_PER_BOOT_KEY_FLAG      NCRYPT_USE_PER_BOOT_KEY_FLAG
#define NCRYPT_VBS_RETURN_CLAIM_DETAILS_FLAG  0x00100000
#define NCRYPT_AUTHORITY_KEY_FLAG             0x00000100
#define NCRYPT_EXTENDED_ERRORS_FLAG           0x10000000

  SECURITY_STATUS WINAPI NCryptOpenStorageProvider(NCRYPT_PROV_HANDLE *phProvider, LPCWSTR pszProviderName, DWORD dwFlags);

#define NCRYPT_CIPHER_OPERATION                BCRYPT_CIPHER_OPERATION
#define NCRYPT_HASH_OPERATION                  BCRYPT_HASH_OPERATION
#define NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION
#define NCRYPT_SECRET_AGREEMENT_OPERATION      BCRYPT_SECRET_AGREEMENT_OPERATION
#define NCRYPT_SIGNATURE_OPERATION             BCRYPT_SIGNATURE_OPERATION
#define NCRYPT_RNG_OPERATION                   BCRYPT_RNG_OPERATION
#define NCRYPT_KEY_DERIVATION_OPERATION        BCRYPT_KEY_DERIVATION_OPERATION

  typedef struct _NCryptAlgorithmName
  {
    LPWSTR pszName;
    DWORD  dwClass;
    DWORD  dwAlgOperations;
    DWORD  dwFlags;
  } NCryptAlgorithmName;

  SECURITY_STATUS WINAPI NCryptEnumAlgorithms(NCRYPT_PROV_HANDLE hProvider, DWORD dwAlgOperations, DWORD *pdwAlgCount, NCryptAlgorithmName **ppAlgList, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptIsAlgSupported(NCRYPT_PROV_HANDLE hProvider, LPCWSTR pszAlgId, DWORD dwFlags);

  typedef struct NCryptKeyName
  {
    LPWSTR pszName;
    LPWSTR pszAlgid;
    DWORD  dwLegacyKeySpec;
    DWORD  dwFlags;
  } NCryptKeyName;

  SECURITY_STATUS WINAPI NCryptEnumKeys(NCRYPT_PROV_HANDLE hProvider, LPCWSTR pszScope, NCryptKeyName **ppKeyName, PVOID *ppEnumState, DWORD dwFlags);

  typedef struct NCryptProviderName
  {
    LPWSTR pszName;
    LPWSTR pszComment;
  } NCryptProviderName;

#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP | WINAPI_PARTITION_SYSTEM)

  SECURITY_STATUS WINAPI NCryptEnumStorageProviders(DWORD *pdwProviderCount, NCryptProviderName **ppProviderList, DWORD dwFlags);

#endif  /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP | WINAPI_PARTITION_SYSTEM) */

  SECURITY_STATUS WINAPI NCryptFreeBuffer(PVOID pvInput);
  SECURITY_STATUS WINAPI NCryptOpenKey(NCRYPT_PROV_HANDLE hProvider, NCRYPT_KEY_HANDLE *phKey, LPCWSTR pszKeyName, DWORD dwLegacyKeySpec, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptCreatePersistedKey(NCRYPT_PROV_HANDLE hProvider, NCRYPT_KEY_HANDLE *phKey, LPCWSTR pszAlgId, LPCWSTR pszKeyName, DWORD dwLegacyKeySpec, DWORD dwFlags);

#define NCRYPT_NAME_PROPERTY                      L"Name"
#define NCRYPT_EPHEMERAL_NAME_PROPERTY            L"Ephemeral Name"
#define NCRYPT_UNIQUE_NAME_PROPERTY               L"Unique Name"
#define NCRYPT_ALGORITHM_PROPERTY                 L"Algorithm Name"
#define NCRYPT_LENGTH_PROPERTY                    L"Length"
#define NCRYPT_LENGTHS_PROPERTY                   L"Lengths"
#define NCRYPT_BLOCK_LENGTH_PROPERTY              L"Block Length"
#define NCRYPT_PUBLIC_LENGTH_PROPERTY             BCRYPT_PUBLIC_KEY_LENGTH
#define NCRYPT_SIGNATURE_LENGTH_PROPERTY          BCRYPT_SIGNATURE_LENGTH
#define NCRYPT_CHAINING_MODE_PROPERTY             L"Chaining Mode"
#define NCRYPT_AUTH_TAG_LENGTH                    L"AuthTagLength"
#define NCRYPT_UI_POLICY_PROPERTY                 L"UI Policy"
#define NCRYPT_EXPORT_POLICY_PROPERTY             L"Export Policy"
#define NCRYPT_WINDOW_HANDLE_PROPERTY             L"HWND Handle"
#define NCRYPT_USE_CONTEXT_PROPERTY               L"Use Context"
#define NCRYPT_IMPL_TYPE_PROPERTY                 L"Impl Type"
#define NCRYPT_KEY_USAGE_PROPERTY                 L"Key Usage"
#define NCRYPT_KEY_TYPE_PROPERTY                  L"Key Type"
#define NCRYPT_VERSION_PROPERTY                   L"Version"
#define NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY    L"Security Descr Support"
#define NCRYPT_SECURITY_DESCR_PROPERTY            L"Security Descr"
#define NCRYPT_USE_COUNT_ENABLED_PROPERTY         L"Enabled Use Count"
#define NCRYPT_USE_COUNT_PROPERTY                 L"Use Count"
#define NCRYPT_LAST_MODIFIED_PROPERTY             L"Modified"
#define NCRYPT_MAX_NAME_LENGTH_PROPERTY           L"Max Name Length"
#define NCRYPT_ALGORITHM_GROUP_PROPERTY           L"Algorithm Group"
#define NCRYPT_DH_PARAMETERS_PROPERTY             BCRYPT_DH_PARAMETERS
#define NCRYPT_ECC_PARAMETERS_PROPERTY            BCRYPT_ECC_PARAMETERS
#define NCRYPT_ECC_CURVE_NAME_PROPERTY            BCRYPT_ECC_CURVE_NAME
#define NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY       BCRYPT_ECC_CURVE_NAME_LIST
#define NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY     L"Virtual Iso"
#define NCRYPT_USE_PER_BOOT_KEY_PROPERTY          L"Per Boot Key"
#define NCRYPT_PROVIDER_HANDLE_PROPERTY           L"Provider Handle"
#define NCRYPT_PIN_PROPERTY                       L"SmartCardPin"
#define NCRYPT_READER_PROPERTY                    L"SmartCardReader"
#define NCRYPT_SMARTCARD_GUID_PROPERTY            L"SmartCardGuid"
#define NCRYPT_CERTIFICATE_PROPERTY               L"SmartCardKeyCertificate"
#define NCRYPT_PIN_PROMPT_PROPERTY                L"SmartCardPinPrompt"
#define NCRYPT_USER_CERTSTORE_PROPERTY            L"SmartCardUserCertStore"
#define NCRYPT_ROOT_CERTSTORE_PROPERTY            L"SmartcardRootCertStore"
#define NCRYPT_SECURE_PIN_PROPERTY                L"SmartCardSecurePin"
#define NCRYPT_ASSOCIATED_ECDH_KEY                L"SmartCardAssociatedECDHKey"
#define NCRYPT_SCARD_PIN_ID                       L"SmartCardPinId"
#define NCRYPT_SCARD_PIN_INFO                     L"SmartCardPinInfo"
#define NCRYPT_READER_ICON_PROPERTY               L"SmartCardReaderIcon"
#define NCRYPT_KDF_SECRET_VALUE                   L"KDFKeySecret"
#define NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY    L"SmartCardDismissUITimeoutSeconds"
#define NCRYPT_VBS_ROOT_PUB_PROPERTY              L"VBS_ROOT_PUB"
#define NCRYPT_CERTIFICATE_FROM_NVRAM_PROPERTY    L"KeyCertificateFromTpmNvram"
#define NCRYPT_PKCS11_KWP_AES_KEY_BITS_PROPERTY   L"Pkcs11AesKeyBits"
#define NCRYPT_PKCS11_KWP_OAEP_HASH_ALGO_PROPERTY L"Pkcs11OaepHashAlgorithm"
#define NCRYPT_PKCS11_KWP_OAEP_LABEL_PROPERTY     L"Pkcs11OaepLabel"

#define NCRYPT_PCP_PLATFORM_TYPE_PROPERTY                    L"PCP_PLATFORM_TYPE"
#define NCRYPT_PCP_PROVIDER_VERSION_PROPERTY                 L"PCP_PROVIDER_VERSION"
#define NCRYPT_PCP_EKPUB_PROPERTY                            L"PCP_EKPUB"
#define NCRYPT_PCP_EKCERT_PROPERTY                           L"PCP_EKCERT"
#define NCRYPT_PCP_EKNVCERT_PROPERTY                         L"PCP_EKNVCERT"
#define NCRYPT_PCP_RSA_EKPUB_PROPERTY                        L"PCP_RSA_EKPUB"
#define NCRYPT_PCP_RSA_EKCERT_PROPERTY                       L"PCP_RSA_EKCERT"
#define NCRYPT_PCP_RSA_EKNVCERT_PROPERTY                     L"PCP_RSA_EKNVCERT"
#define NCRYPT_PCP_ECC_EKPUB_PROPERTY                        L"PCP_ECC_EKPUB"
#define NCRYPT_PCP_ECC_EKCERT_PROPERTY                       L"PCP_ECC_EKCERT"
#define NCRYPT_PCP_ECC_EKNVCERT_PROPERTY                     L"PCP_ECC_EKNVCERT"
#define NCRYPT_PCP_SRKPUB_PROPERTY                           L"PCP_SRKPUB"
#define NCRYPT_PCP_PCRTABLE_PROPERTY                         L"PCP_PCRTABLE"
#define NCRYPT_PCP_CHANGEPASSWORD_PROPERTY                   L"PCP_CHANGEPASSWORD"
#define NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY                L"PCP_PASSWORD_REQUIRED"
#define NCRYPT_PCP_USAGEAUTH_PROPERTY                        L"PCP_USAGEAUTH"
#define NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY                L"PCP_MIGRATIONPASSWORD"
#define NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY                   L"PCP_EXPORT_ALLOWED"
#define NCRYPT_PCP_STORAGEPARENT_PROPERTY                    L"PCP_STORAGEPARENT"
#define NCRYPT_PCP_PROVIDERHANDLE_PROPERTY                   L"PCP_PROVIDERMHANDLE"
#define NCRYPT_PCP_PLATFORMHANDLE_PROPERTY                   L"PCP_PLATFORMHANDLE"
#define NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY         L"PCP_PLATFORM_BINDING_PCRMASK"
#define NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY   L"PCP_PLATFORM_BINDING_PCRDIGESTLIST"
#define NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY       L"PCP_PLATFORM_BINDING_PCRDIGEST"
#define NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY                 L"PCP_KEY_USAGE_POLICY"
#define NCRYPT_PCP_RSA_SCHEME_PROPERTY                       L"PCP_RSA_SCHEME"
#define NCRYPT_PCP_TPM12_IDBINDING_PROPERTY                  L"PCP_TPM12_IDBINDING"
#define NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY          L"PCP_TPM12_IDBINDING_DYNAMIC"
#define NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY               L"PCP_TPM12_IDACTIVATION"
#define NCRYPT_PCP_KEYATTESTATION_PROPERTY                   L"PCP_TPM12_KEYATTESTATION"
#define NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY   L"PCP_ALTERNATE_KEY_STORAGE_LOCATION"
#define NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY        L"PCP_PLATFORM_BINDING_PCRALGID"
#define NCRYPT_PCP_HMAC_AUTH_POLICYREF                       L"PCP_HMAC_AUTH_POLICYREF"
#define NCRYPT_PCP_HMAC_AUTH_POLICYINFO                      L"PCP_HMAC_AUTH_POLICYINFO"
#define NCRYPT_PCP_HMAC_AUTH_NONCE                           L"PCP_HMAC_AUTH_NONCE"
#define NCRYPT_PCP_HMAC_AUTH_SIGNATURE                       L"PCP_HMAC_AUTH_SIGNATURE"
#define NCRYPT_PCP_HMAC_AUTH_TICKET                          L"PCP_HMAC_AUTH_TICKET"
#define NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY                 L"PCP_NO_DA_PROTECTION"
#define NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY              L"PCP_TPM_MANUFACTURER_ID"
#define NCRYPT_PCP_TPM_FW_VERSION_PROPERTY                   L"PCP_TPM_FW_VERSION"
#define NCRYPT_PCP_TPM2BNAME_PROPERTY                        L"PCP_TPM2BNAME"
#define NCRYPT_PCP_TPM_VERSION_PROPERTY                      L"PCP_TPM_VERSION"
#define NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY                 L"PCP_RAW_POLICYDIGEST"
#define NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY                 L"PCP_KEY_CREATIONHASH"
#define NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY               L"PCP_KEY_CREATIONTICKET"
#define NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY              L"PCP_RSA_SCHEME_HASH_ALG"
#define NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY    L"PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED"
#define NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY L"PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY"
#define NCRYPT_PCP_SESSIONID_PROPERTY                        L"PCP_SESSIONID"
#define NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY                    L"PSS Salt Size"
#define NCRYPT_PCP_INTERMEDIATE_CA_EKCERT_PROPERTY           L"PCP_INTERMEDIATE_CA_EKCERT"
#define NCRYPT_PCP_PCRTABLE_ALGORITHM_PROPERTY               L"PCP_PCRTABLE_ALGORITHM"
#define NCRYPT_PCP_SYMMETRIC_KEYBITS_PROPERTY                L"PCP_SYMMETRIC_KEYBITS"

#define IFX_RSA_KEYGEN_VUL_NOT_AFFECTED     0
#define IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_1 1
#define IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_2 2

#define NCRYPT_TPM_PSS_SALT_SIZE_UNKNOWN  0x00000000
#define NCRYPT_TPM_PSS_SALT_SIZE_MAXIMUM  0x00000001
#define NCRYPT_TPM_PSS_SALT_SIZE_HASHSIZE 0x00000002

#define NCRYPT_TPM_PAD_PSS_IGNORE_SALT 0x00000020

#define NCRYPT_TPM12_PROVIDER           (0x00010000)
#define NCRYPT_PCP_SIGNATURE_KEY        (0x00000001)
#define NCRYPT_PCP_ENCRYPTION_KEY       (0x00000002)
#define NCRYPT_PCP_GENERIC_KEY          (NCRYPT_PCP_SIGNATURE_KEY | NCRYPT_PCP_ENCRYPTION_KEY)
#define NCRYPT_PCP_STORAGE_KEY          (0x00000004)
#define NCRYPT_PCP_IDENTITY_KEY         (0x00000008)
#define NCRYPT_PCP_HMACVERIFICATION_KEY (0x00000010)

#define NCRYPT_SCARD_NGC_KEY_NAME                      L"SmartCardNgcKeyName"
#define NCRYPT_INITIALIZATION_VECTOR                   BCRYPT_INITIALIZATION_VECTOR
#define NCRYPT_CHANGEPASSWORD_PROPERTY                 NCRYPT_PCP_CHANGEPASSWORD_PROPERTY
#define NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY
#define NCRYPT_KEY_ACCESS_POLICY_PROPERTY              L"Key Access Policy"

#define NCRYPT_MAX_PROPERTY_NAME 64
#define NCRYPT_MAX_PROPERTY_DATA 0x100000

#define NCRYPT_ALLOW_EXPORT_FLAG                0x00000001
#define NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG      0x00000002
#define NCRYPT_ALLOW_ARCHIVING_FLAG             0x00000004
#define NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG   0x00000008
#define NCRYPT_ALLOW_PKCS11_RSA_AES_EXPORT_FLAG 0x00000010

#define NCRYPT_IMPL_HARDWARE_FLAG          0x00000001
#define NCRYPT_IMPL_SOFTWARE_FLAG          0x00000002
#define NCRYPT_IMPL_REMOVABLE_FLAG         0x00000008
#define NCRYPT_IMPL_HARDWARE_RNG_FLAG      0x00000010
#define NCRYPT_IMPL_VIRTUAL_ISOLATION_FLAG 0x00000020

#define NCRYPT_ALLOW_DECRYPT_FLAG              0x00000001
#define NCRYPT_ALLOW_SIGNING_FLAG              0x00000002
#define NCRYPT_ALLOW_KEY_AGREEMENT_FLAG        0x00000004
#define NCRYPT_ALLOW_KEY_ENVELOPE_FLAG         0x00000008
#define NCRYPT_ALLOW_KEY_IMPORT_FLAG           NCRYPT_ALLOW_KEY_ENVELOPE_FLAG
#define NCRYPT_ALLOW_KEY_ATTESTATION_FLAG      0x00000010
#define NCRYPT_ALLOW_KEY_IMPORT_EPHEMERAL_FLAG 0x00000020
#define NCRYPT_ALLOW_ALL_USAGES                0x00ffffff

#define NCRYPT_UI_PROTECT_KEY_FLAG                0x00000001
#define NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG      0x00000002
#define NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG     0x00000004
#define NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG 0x00000008

#define NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY L"PinCacheFreeApplicationTicket"
#define NCRYPT_PIN_CACHE_FLAGS_PROPERTY                   L"PinCacheFlags"
#define NCRYPT_PIN_CACHE_DISABLE_DPL_FLAG                 0x00000001
#define NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY      L"PinCacheApplicationTicket"
#define NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY       L"PinCacheApplicationImage"
#define NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY      L"PinCacheApplicationStatus"
#define NCRYPT_PIN_CACHE_PIN_PROPERTY                     L"PinCachePin"
#define NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY     L"PinCacheIsGestureRequired"
#define NCRYPT_PIN_CACHE_REQUIRE_GESTURE_FLAG             0x00000001
#define NCRYPT_PIN_CACHE_PIN_BYTE_LENGTH                  90
#define NCRYPT_PIN_CACHE_APPLICATION_TICKET_BYTE_LENGTH   90
#define NCRYPT_PIN_CACHE_CLEAR_PROPERTY                   L"PinCacheClear"
#define NCRYPT_PIN_CACHE_CLEAR_FOR_CALLING_PROCESS_OPTION 0x00000001

  typedef struct __NCRYPT_UI_POLICY
  {
    DWORD   dwVersion;
    DWORD   dwFlags;
    LPCWSTR pszCreationTitle;
    LPCWSTR pszFriendlyName;
    LPCWSTR pszDescription;
  } NCRYPT_UI_POLICY;

#define NCRYPT_KEY_ACCESS_POLICY_VERSION 1
#define NCRYPT_ALLOW_SILENT_KEY_ACCESS   0x00000001

  typedef struct __NCRYPT_KEY_ACCESS_POLICY_BLOB
  {
    DWORD dwVersion;
    DWORD dwPolicyFlags;
    DWORD cbUserSid;
    DWORD cbApplicationSid;
  } NCRYPT_KEY_ACCESS_POLICY_BLOB;

  typedef struct __NCRYPT_SUPPORTED_LENGTHS
  {
    DWORD dwMinLength;
    DWORD dwMaxLength;
    DWORD dwIncrement;
    DWORD dwDefaultLength;
  } NCRYPT_SUPPORTED_LENGTHS;

  typedef struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO
  {
    DWORD dwVersion;
    INT32 iExpiration;
    BYTE  pabNonce[32];
    BYTE  pabPolicyRef[32];
    BYTE  pabHMAC[32];
  } NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO;

  typedef struct __NCRYPT_PCP_TPM_FW_VERSION_INFO
  {
    UINT16 major1;
    UINT16 major2;
    UINT16 minor1;
    UINT16 minor2;
  } NCRYPT_PCP_TPM_FW_VERSION_INFO;

  typedef struct __NCRYPT_PCP_RAW_POLICYDIGEST
  {
    DWORD dwVersion;
    DWORD cbDigest;
  } NCRYPT_PCP_RAW_POLICYDIGEST_INFO;

  SECURITY_STATUS WINAPI NCryptGetProperty(NCRYPT_HANDLE hObject, LPCWSTR pszProperty, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptSetProperty(NCRYPT_HANDLE hObject, LPCWSTR pszProperty, PBYTE pbInput, DWORD cbInput, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptFinalizeKey(NCRYPT_KEY_HANDLE hKey, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptEncrypt(NCRYPT_KEY_HANDLE hKey, PBYTE pbInput, DWORD cbInput, VOID *pPaddingInfo, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptDecrypt(NCRYPT_KEY_HANDLE hKey, PBYTE pbInput, DWORD cbInput, VOID *pPaddingInfo, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);

  typedef struct _NCRYPT_KEY_BLOB_HEADER
  {
    ULONG cbSize;
    ULONG dwMagic;
    ULONG cbAlgName;
    ULONG cbKeyData;
  } NCRYPT_KEY_BLOB_HEADER, *PNCRYPT_KEY_BLOB_HEADER;

#define NCRYPT_CIPHER_KEY_BLOB_MAGIC    0x52485043
#define NCRYPT_KDF_KEY_BLOB_MAGIC       0x3146444B
#define NCRYPT_PROTECTED_KEY_BLOB_MAGIC 0x4B545250
#define NCRYPT_CIPHER_KEY_BLOB          L"CipherKeyBlob"
#define NCRYPT_KDF_KEY_BLOB             L"KDFKeyBlob"
#define NCRYPT_PROTECTED_KEY_BLOB       L"ProtectedKeyBlob"

  typedef struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER
  {
    DWORD magic;
    DWORD cbHeader;
    DWORD cbPublic;
    DWORD cbPrivate;
    DWORD cbName;
  } NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER, *PNCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER;

#define NCRYPT_TPM_LOADABLE_KEY_BLOB_MIN_SIZE sizeof(NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER)
#define NCRYPT_TPM_LOADABLE_KEY_BLOB          L"PcpTpmProtectedKeyBlob"
#define NCRYPT_TPM_LOADABLE_KEY_BLOB_MAGIC    0x4D54504B

  typedef struct NCRYPT_TPM_PERSISTENT_KEY_BLOB_HEADER
  {
    DWORD magic;
    DWORD cbHeader;
    DWORD tpmHandle;
  } NCRYPT_TPM_PERSISTENT_KEY_BLOB_HEADER, *PNCRYPT_TPM_PERSISTENT_KEY_BLOB_HEADER;

#define NCRYPT_TPM_PERSISTENT_KEY_BLOB_MIN_SIZE sizeof(NCRYPT_TPM_PERSISTENT_KEY_BLOB_HEADER)
#define NCRYPT_TPM_PERSISTENT_KEY_BLOB          L"PcpTpmPersistentKeyBlob"
#define NCRYPT_TPM_PERSISTENT_KEY_BLOB_MAGIC    0x4D54504B

#define NCRYPT_PKCS7_ENVELOPE_BLOB    L"PKCS7_ENVELOPE"
#define NCRYPT_PKCS8_PRIVATE_KEY_BLOB L"PKCS8_PRIVATEKEY"
#define NCRYPT_OPAQUETRANSPORT_BLOB   L"OpaqueTransport"

  SECURITY_STATUS WINAPI NCryptImportKey(NCRYPT_PROV_HANDLE hProvider, NCRYPT_KEY_HANDLE hImportKey, LPCWSTR pszBlobType, NCryptBufferDesc *pParameterList, NCRYPT_KEY_HANDLE *phKey, PBYTE pbData, DWORD cbData, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptExportKey(NCRYPT_KEY_HANDLE hKey, NCRYPT_KEY_HANDLE hExportKey, LPCWSTR pszBlobType, NCryptBufferDesc *pParameterList, PBYTE pbOutput, DWORD cbOutput, DWORD *pcbResult, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptSignHash(NCRYPT_KEY_HANDLE hKey, VOID *pPaddingInfo, PBYTE pbHashValue, DWORD cbHashValue, PBYTE pbSignature, DWORD cbSignature, DWORD *pcbResult, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptVerifySignature(NCRYPT_KEY_HANDLE hKey, VOID *pPaddingInfo, PBYTE pbHashValue, DWORD cbHashValue, PBYTE pbSignature, DWORD cbSignature, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptDeleteKey(NCRYPT_KEY_HANDLE hKey, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptFreeObject(NCRYPT_HANDLE hObject);

#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP | WINAPI_PARTITION_SYSTEM)

  WINBOOL         WINAPI NCryptIsKeyHandle(NCRYPT_KEY_HANDLE hKey);
  SECURITY_STATUS WINAPI NCryptTranslateHandle(NCRYPT_PROV_HANDLE *phProvider, NCRYPT_KEY_HANDLE *phKey, HCRYPTPROV hLegacyProv, HCRYPTKEY hLegacyKey, DWORD dwLegacyKeySpec, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptNotifyChangeKey(NCRYPT_PROV_HANDLE hProvider, HANDLE *phEvent, DWORD dwFlags);

#endif  /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP | WINAPI_PARTITION_SYSTEM) */

  SECURITY_STATUS WINAPI NCryptSecretAgreement(NCRYPT_KEY_HANDLE hPrivKey, NCRYPT_KEY_HANDLE hPubKey, NCRYPT_SECRET_HANDLE *phAgreedSecret, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptDeriveKey(NCRYPT_SECRET_HANDLE hSharedSecret, LPCWSTR pwszKDF, NCryptBufferDesc *pParameterList, PBYTE pbDerivedKey, DWORD cbDerivedKey, DWORD *pcbResult, ULONG dwFlags);
  SECURITY_STATUS WINAPI NCryptKeyDerivation(NCRYPT_KEY_HANDLE hKey, NCryptBufferDesc *pParameterList, PUCHAR pbDerivedKey, DWORD cbDerivedKey, DWORD *pcbResult, ULONG dwFlags);
  SECURITY_STATUS WINAPI NCryptCreateClaim(NCRYPT_KEY_HANDLE hSubjectKey, NCRYPT_KEY_HANDLE hAuthorityKey, DWORD dwClaimType, NCryptBufferDesc *pParameterList, PBYTE pbClaimBlob, DWORD cbClaimBlob, DWORD *pcbResult, DWORD dwFlags);
  SECURITY_STATUS WINAPI NCryptVerifyClaim(NCRYPT_KEY_HANDLE hSubjectKey, NCRYPT_KEY_HANDLE hAuthorityKey, DWORD dwClaimType, NCryptBufferDesc *pParameterList, PBYTE pbClaimBlob, DWORD cbClaimBlob, NCryptBufferDesc *pOutput, DWORD dwFlags);

#define NCRYPT_KEY_STORAGE_INTERFACE_VERSION   BCRYPT_MAKE_INTERFACE_VERSION(1, 0)
#define NCRYPT_KEY_STORAGE_INTERFACE_VERSION_2 BCRYPT_MAKE_INTERFACE_VERSION(2, 0)
#define NCRYPT_KEY_STORAGE_INTERFACE_VERSION_3 BCRYPT_MAKE_INTERFACE_VERSION(3, 0)

#ifdef __cplusplus
}
#endif

#endif  /* __NCRYPT_H__ */
