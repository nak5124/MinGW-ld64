;
; Definition file of WMIsvc.DLL
; Automatic generated by gendef 1.1
; written by Kai Tietz 2008
; The def file has to be processed by --kill-at (-k) option of dlltool or ld
;
LIBRARY "WMIsvc.DLL"
EXPORTS
; public: __cdecl C9XAce::C9XAce(class C9XAce const &__ptr64 )__ptr64 
??0C9XAce@@QEAA@AEBV0@@Z
; public: __cdecl C9XAce::C9XAce(void)__ptr64 
??0C9XAce@@QEAA@XZ
; public: __cdecl CArena::CArena(,class CArena *__ptr64 const)__ptr64 
??0CArena@@QEAA@$$QEAV0@@Z
; public: __cdecl CArena::CArena(class CArena const &__ptr64 )__ptr64 
??0CArena@@QEAA@AEBV0@@Z
; public: __cdecl CArena::CArena(void)__ptr64 
??0CArena@@QEAA@XZ
; public: __cdecl CBaseAce::CBaseAce(class CBaseAce const &__ptr64 )__ptr64 
??0CBaseAce@@QEAA@AEBV0@@Z
; public: __cdecl CBaseAce::CBaseAce(void)__ptr64 
??0CBaseAce@@QEAA@XZ
; public: __cdecl CCheckedInCritSec::CCheckedInCritSec(class CCritSec *__ptr64)__ptr64 
??0CCheckedInCritSec@@QEAA@PEAVCCritSec@@@Z
; public: __cdecl CCircularQueue::CCircularQueue(void)__ptr64 
??0CCircularQueue@@QEAA@XZ
; public: __cdecl CContainerControl::CContainerControl(,class CContainerControl *__ptr64 const)__ptr64 
??0CContainerControl@@QEAA@$$QEAV0@@Z
; public: __cdecl CContainerControl::CContainerControl(class CContainerControl const &__ptr64 )__ptr64 
??0CContainerControl@@QEAA@AEBV0@@Z
; public: __cdecl CContainerControl::CContainerControl(struct IUnknown *__ptr64)__ptr64 
??0CContainerControl@@QEAA@PEAUIUnknown@@@Z
; public: __cdecl CCritSec::CCritSec(void)__ptr64 
??0CCritSec@@QEAA@XZ
; public: __cdecl CEnterWbemCriticalSection::CEnterWbemCriticalSection(class CWbemCriticalSection *__ptr64,unsigned long)__ptr64 
??0CEnterWbemCriticalSection@@QEAA@PEAVCWbemCriticalSection@@K@Z
; public: __cdecl CEventLog::CEventLog(class CEventLog const &__ptr64 )__ptr64 
??0CEventLog@@QEAA@AEBV0@@Z
; public: __cdecl CEventLogRecord::CEventLogRecord(class CEventLogRecord &__ptr64 )__ptr64 
??0CEventLogRecord@@QEAA@AEAV0@@Z
; public: __cdecl CHaltable::CHaltable(class CHaltable const &__ptr64 )__ptr64 
??0CHaltable@@QEAA@AEBV0@@Z
; public: __cdecl CHex::CHex(long)__ptr64 
??0CHex@@QEAA@J@Z
; public: __cdecl CInCritSec::CInCritSec(struct _RTL_CRITICAL_SECTION *__ptr64)__ptr64 
??0CInCritSec@@QEAA@PEAU_RTL_CRITICAL_SECTION@@@Z
; public: __cdecl CInsertionString::CInsertionString(,class CInsertionString *__ptr64 const)__ptr64 
??0CInsertionString@@QEAA@$$QEAV0@@Z
; public: __cdecl CInsertionString::CInsertionString(class CInsertionString const &__ptr64 )__ptr64 
??0CInsertionString@@QEAA@AEBV0@@Z
; public: __cdecl CInsertionString::CInsertionString(char const *__ptr64)__ptr64 
??0CInsertionString@@QEAA@PEBD@Z
; public: __cdecl CInsertionString::CInsertionString(unsigned short const *__ptr64)__ptr64 
??0CInsertionString@@QEAA@PEBG@Z
; public: __cdecl CInsertionString::CInsertionString(void)__ptr64 
??0CInsertionString@@QEAA@XZ
; public: __cdecl CLifeControl::CLifeControl(,class CLifeControl *__ptr64 const)__ptr64 
??0CLifeControl@@QEAA@$$QEAV0@@Z
; public: __cdecl CLifeControl::CLifeControl(class CLifeControl const &__ptr64 )__ptr64 
??0CLifeControl@@QEAA@AEBV0@@Z
; public: __cdecl CLifeControl::CLifeControl(void)__ptr64 
??0CLifeControl@@QEAA@XZ
; public: __cdecl CNtAce::CNtAce(void)__ptr64 
??0CNtAce@@QEAA@XZ
; public: __cdecl CNtSid::CNtSid(void)__ptr64 
??0CNtSid@@QEAA@XZ
; public: __cdecl CTraceSessionControl::CTraceSessionControl(void)__ptr64 
??0CTraceSessionControl@@QEAA@XZ
; public: __cdecl CUnk::CUnk(class CUnk const &__ptr64 )__ptr64 
??0CUnk@@QEAA@AEBV0@@Z
; public: __cdecl CUnkInternal::CUnkInternal(class CUnkInternal const &__ptr64 )__ptr64 
??0CUnkInternal@@QEAA@AEBV0@@Z
; public: __cdecl CUnkInternal::CUnkInternal(class CLifeControl *__ptr64)__ptr64 
??0CUnkInternal@@QEAA@PEAVCLifeControl@@@Z
; public: __cdecl CVar::CVar(char)__ptr64 
??0CVar@@QEAA@D@Z
; public: __cdecl CVar::CVar(unsigned char)__ptr64 
??0CVar@@QEAA@E@Z
; public: __cdecl CVar::CVar(short)__ptr64 
??0CVar@@QEAA@F@Z
; public: __cdecl CVar::CVar(short,int)__ptr64 
??0CVar@@QEAA@FH@Z
; public: __cdecl CVar::CVar(unsigned short)__ptr64 
??0CVar@@QEAA@G@Z
; public: __cdecl CVar::CVar(int,unsigned short *__ptr64)__ptr64 
??0CVar@@QEAA@HPEAG@Z
; public: __cdecl CVar::CVar(int,struct tagSAFEARRAY *__ptr64)__ptr64 
??0CVar@@QEAA@HPEAUtagSAFEARRAY@@@Z
; public: __cdecl CVar::CVar(int,class auto_bstr)__ptr64 
??0CVar@@QEAA@HVauto_bstr@@@Z
; public: __cdecl CVar::CVar(long)__ptr64 
??0CVar@@QEAA@J@Z
; public: __cdecl CVar::CVar(unsigned long)__ptr64 
??0CVar@@QEAA@K@Z
; public: __cdecl CVar::CVar(float)__ptr64 
??0CVar@@QEAA@M@Z
; public: __cdecl CVar::CVar(double)__ptr64 
??0CVar@@QEAA@N@Z
; public: __cdecl CVar::CVar(char *__ptr64,int)__ptr64 
??0CVar@@QEAA@PEADH@Z
; public: __cdecl CVar::CVar(unsigned short *__ptr64,int)__ptr64 
??0CVar@@QEAA@PEAGH@Z
; public: __cdecl CVar::CVar(struct _FILETIME *__ptr64)__ptr64 
??0CVar@@QEAA@PEAU_FILETIME@@@Z
; public: __cdecl CVar::CVar(struct _GUID *__ptr64,int)__ptr64 
??0CVar@@QEAA@PEAU_GUID@@H@Z
; public: __cdecl CVar::CVar(struct tagBLOB *__ptr64,int)__ptr64 
??0CVar@@QEAA@PEAUtagBLOB@@H@Z
; public: __cdecl CVar::CVar(struct tagVARIANT *__ptr64)__ptr64 
??0CVar@@QEAA@PEAUtagVARIANT@@@Z
; public: __cdecl CVar::CVar(class CVarVector *__ptr64,int)__ptr64 
??0CVar@@QEAA@PEAVCVarVector@@H@Z
; public: __cdecl CVar::CVar(void)__ptr64 
??0CVar@@QEAA@XZ
; protected: __cdecl CWbemInterval::CWbemInterval(unsigned long)__ptr64 
??0CWbemInterval@@IEAA@K@Z
; public: __cdecl CWbemInterval::CWbemInterval(void)__ptr64 
??0CWbemInterval@@QEAA@XZ
; protected: __cdecl CWbemTime::CWbemTime(__int64)__ptr64 
??0CWbemTime@@IEAA@_J@Z
; public: __cdecl CWbemTime::CWbemTime(class CWbemTime const &__ptr64 )__ptr64 
??0CWbemTime@@QEAA@AEBV0@@Z
; public: __cdecl CWbemTime::CWbemTime(void)__ptr64 
??0CWbemTime@@QEAA@XZ
; public: __cdecl CWin32DefaultArena::CWin32DefaultArena(class CWin32DefaultArena const &__ptr64 )__ptr64 
??0CWin32DefaultArena@@QEAA@AEBV0@@Z
; public: __cdecl CWin32DefaultArena::CWin32DefaultArena(void)__ptr64 
??0CWin32DefaultArena@@QEAA@XZ
; public: __cdecl WString::WString(class WString const &__ptr64 )__ptr64 
??0WString@@QEAA@AEBV0@@Z
; public: virtual __cdecl CBaseAce::~CBaseAce(void)__ptr64 
??1CBaseAce@@UEAA@XZ
; public: __cdecl CCheckedInCritSec::~CCheckedInCritSec(void)__ptr64 
??1CCheckedInCritSec@@QEAA@XZ
; public: __cdecl CCritSec::~CCritSec(void)__ptr64 
??1CCritSec@@QEAA@XZ
; public: __cdecl CEnterWbemCriticalSection::~CEnterWbemCriticalSection(void)__ptr64 
??1CEnterWbemCriticalSection@@QEAA@XZ
; public: __cdecl CEventLogRecord::~CEventLogRecord(void)__ptr64 
??1CEventLogRecord@@QEAA@XZ
; public: __cdecl CInCritSec::~CInCritSec(void)__ptr64 
??1CInCritSec@@QEAA@XZ
; public: __cdecl CInsertionString::~CInsertionString(void)__ptr64 
??1CInsertionString@@QEAA@XZ
; public: virtual __cdecl CUnkInternal::~CUnkInternal(void)__ptr64 
??1CUnkInternal@@UEAA@XZ
; public: __cdecl CWin32DefaultArena::~CWin32DefaultArena(void)__ptr64 
??1CWin32DefaultArena@@QEAA@XZ
; public: __cdecl WString::~WString(void)__ptr64 
??1WString@@QEAA@XZ
; public: class C9XAce &__ptr64 __cdecl C9XAce::operator =(class C9XAce const &__ptr64 )__ptr64 
??4C9XAce@@QEAAAEAV0@AEBV0@@Z
; public: class CArena &__ptr64 __cdecl CArena::operator =(,class CArena *__ptr64 const)__ptr64 
??4CArena@@QEAAAEAV0@$$QEAV0@@Z
; public: class CArena &__ptr64 __cdecl CArena::operator =(class CArena const &__ptr64 )__ptr64 
??4CArena@@QEAAAEAV0@AEBV0@@Z
; public: class CBaseAce &__ptr64 __cdecl CBaseAce::operator =(class CBaseAce const &__ptr64 )__ptr64 
??4CBaseAce@@QEAAAEAV0@AEBV0@@Z
; public: class CCheckedInCritSec &__ptr64 __cdecl CCheckedInCritSec::operator =(class CCheckedInCritSec const &__ptr64 )__ptr64 
??4CCheckedInCritSec@@QEAAAEAV0@AEBV0@@Z
; public: class CCircularQueue &__ptr64 __cdecl CCircularQueue::operator =(,class CCircularQueue *__ptr64 const)__ptr64 
??4CCircularQueue@@QEAAAEAV0@$$QEAV0@@Z
; public: class CCircularQueue &__ptr64 __cdecl CCircularQueue::operator =(class CCircularQueue const &__ptr64 )__ptr64 
??4CCircularQueue@@QEAAAEAV0@AEBV0@@Z
; public: class CContainerControl &__ptr64 __cdecl CContainerControl::operator =(,class CContainerControl *__ptr64 const)__ptr64 
??4CContainerControl@@QEAAAEAV0@$$QEAV0@@Z
; public: class CContainerControl &__ptr64 __cdecl CContainerControl::operator =(class CContainerControl const &__ptr64 )__ptr64 
??4CContainerControl@@QEAAAEAV0@AEBV0@@Z
; public: class CCritSec &__ptr64 __cdecl CCritSec::operator =(class CCritSec const &__ptr64 )__ptr64 
??4CCritSec@@QEAAAEAV0@AEBV0@@Z
; public: class CEnterWbemCriticalSection &__ptr64 __cdecl CEnterWbemCriticalSection::operator =(class CEnterWbemCriticalSection const &__ptr64 )__ptr64 
??4CEnterWbemCriticalSection@@QEAAAEAV0@AEBV0@@Z
; public: class CFlexQueue &__ptr64 __cdecl CFlexQueue::operator =(class CFlexQueue const &__ptr64 )__ptr64 
??4CFlexQueue@@QEAAAEAV0@AEBV0@@Z
; public: class CHaltable &__ptr64 __cdecl CHaltable::operator =(class CHaltable const &__ptr64 )__ptr64 
??4CHaltable@@QEAAAEAV0@AEBV0@@Z
; public: class CHex &__ptr64 __cdecl CHex::operator =(,class CHex *__ptr64 const)__ptr64 
??4CHex@@QEAAAEAV0@$$QEAV0@@Z
; public: class CHex &__ptr64 __cdecl CHex::operator =(class CHex const &__ptr64 )__ptr64 
??4CHex@@QEAAAEAV0@AEBV0@@Z
; public: class CInCritSec &__ptr64 __cdecl CInCritSec::operator =(class CInCritSec const &__ptr64 )__ptr64 
??4CInCritSec@@QEAAAEAV0@AEBV0@@Z
; public: class CInsertionString &__ptr64 __cdecl CInsertionString::operator =(,class CInsertionString *__ptr64 const)__ptr64 
??4CInsertionString@@QEAAAEAV0@$$QEAV0@@Z
; public: class CInsertionString &__ptr64 __cdecl CInsertionString::operator =(class CInsertionString const &__ptr64 )__ptr64 
??4CInsertionString@@QEAAAEAV0@AEBV0@@Z
; public: class CLifeControl &__ptr64 __cdecl CLifeControl::operator =(,class CLifeControl *__ptr64 const)__ptr64 
??4CLifeControl@@QEAAAEAV0@$$QEAV0@@Z
; public: class CLifeControl &__ptr64 __cdecl CLifeControl::operator =(class CLifeControl const &__ptr64 )__ptr64 
??4CLifeControl@@QEAAAEAV0@AEBV0@@Z
; public: class CMemoryLog &__ptr64 __cdecl CMemoryLog::operator =(,class CMemoryLog *__ptr64 const)__ptr64 
??4CMemoryLog@@QEAAAEAV0@$$QEAV0@@Z
; public: class CMemoryLog &__ptr64 __cdecl CMemoryLog::operator =(class CMemoryLog const &__ptr64 )__ptr64 
??4CMemoryLog@@QEAAAEAV0@AEBV0@@Z
; public: class CNtSecurity &__ptr64 __cdecl CNtSecurity::operator =(,class CNtSecurity *__ptr64 const)__ptr64 
??4CNtSecurity@@QEAAAEAV0@$$QEAV0@@Z
; public: class CNtSecurity &__ptr64 __cdecl CNtSecurity::operator =(class CNtSecurity const &__ptr64 )__ptr64 
??4CNtSecurity@@QEAAAEAV0@AEBV0@@Z
; public: class CPersistentConfig &__ptr64 __cdecl CPersistentConfig::operator =(,class CPersistentConfig *__ptr64 const)__ptr64 
??4CPersistentConfig@@QEAAAEAV0@$$QEAV0@@Z
; public: class CPersistentConfig &__ptr64 __cdecl CPersistentConfig::operator =(class CPersistentConfig const &__ptr64 )__ptr64 
??4CPersistentConfig@@QEAAAEAV0@AEBV0@@Z
; public: class CSmallArrayBlob &__ptr64 __cdecl CSmallArrayBlob::operator =(,class CSmallArrayBlob *__ptr64 const)__ptr64 
??4CSmallArrayBlob@@QEAAAEAV0@$$QEAV0@@Z
; public: class CSmallArrayBlob &__ptr64 __cdecl CSmallArrayBlob::operator =(class CSmallArrayBlob const &__ptr64 )__ptr64 
??4CSmallArrayBlob@@QEAAAEAV0@AEBV0@@Z
; public: class CStaticCritSec &__ptr64 __cdecl CStaticCritSec::operator =(class CStaticCritSec const &__ptr64 )__ptr64 
??4CStaticCritSec@@QEAAAEAV0@AEBV0@@Z
; public: class CTraceSessionControl &__ptr64 __cdecl CTraceSessionControl::operator =(,class CTraceSessionControl *__ptr64 const)__ptr64 
??4CTraceSessionControl@@QEAAAEAV0@$$QEAV0@@Z
; public: class CTraceSessionControl &__ptr64 __cdecl CTraceSessionControl::operator =(class CTraceSessionControl const &__ptr64 )__ptr64 
??4CTraceSessionControl@@QEAAAEAV0@AEBV0@@Z
; public: class CUnk &__ptr64 __cdecl CUnk::operator =(class CUnk const &__ptr64 )__ptr64 
??4CUnk@@QEAAAEAV0@AEBV0@@Z
; public: class CUnkInternal &__ptr64 __cdecl CUnkInternal::operator =(class CUnkInternal const &__ptr64 )__ptr64 
??4CUnkInternal@@QEAAAEAV0@AEBV0@@Z
; public: class CWMITraceSettings &__ptr64 __cdecl CWMITraceSettings::operator =(,class CWMITraceSettings *__ptr64 const)__ptr64 
??4CWMITraceSettings@@QEAAAEAV0@$$QEAV0@@Z
; public: class CWMITraceSettings &__ptr64 __cdecl CWMITraceSettings::operator =(class CWMITraceSettings const &__ptr64 )__ptr64 
??4CWMITraceSettings@@QEAAAEAV0@AEBV0@@Z
; public: class CWbemCriticalSection &__ptr64 __cdecl CWbemCriticalSection::operator =(class CWbemCriticalSection const &__ptr64 )__ptr64 
??4CWbemCriticalSection@@QEAAAEAV0@AEBV0@@Z
; public: class CWbemInterval &__ptr64 __cdecl CWbemInterval::operator =(,class CWbemInterval *__ptr64 const)__ptr64 
??4CWbemInterval@@QEAAAEAV0@$$QEAV0@@Z
; public: class CWbemInterval &__ptr64 __cdecl CWbemInterval::operator =(class CWbemInterval const &__ptr64 )__ptr64 
??4CWbemInterval@@QEAAAEAV0@AEBV0@@Z
; public: void __cdecl CWbemTime::operator =(class CWbemTime const &__ptr64 )__ptr64 
??4CWbemTime@@QEAAXAEBV0@@Z
; public: class CWbemTimeSpan &__ptr64 __cdecl CWbemTimeSpan::operator =(,class CWbemTimeSpan *__ptr64 const)__ptr64 
??4CWbemTimeSpan@@QEAAAEAV0@$$QEAV0@@Z
; public: class CWbemTimeSpan &__ptr64 __cdecl CWbemTimeSpan::operator =(class CWbemTimeSpan const &__ptr64 )__ptr64 
??4CWbemTimeSpan@@QEAAAEAV0@AEBV0@@Z
; public: class CWin32DefaultArena &__ptr64 __cdecl CWin32DefaultArena::operator =(class CWin32DefaultArena const &__ptr64 )__ptr64 
??4CWin32DefaultArena@@QEAAAEAV0@AEBV0@@Z
; public: class MD5 &__ptr64 __cdecl MD5::operator =(,class MD5 *__ptr64 const)__ptr64 
??4MD5@@QEAAAEAV0@$$QEAV0@@Z
; public: class MD5 &__ptr64 __cdecl MD5::operator =(class MD5 const &__ptr64 )__ptr64 
??4MD5@@QEAAAEAV0@AEBV0@@Z
; public: class Registry &__ptr64 __cdecl Registry::operator =(class Registry const &__ptr64 )__ptr64 
??4Registry@@QEAAAEAV0@AEBV0@@Z
; public: void *__ptr64 __cdecl CSmallArrayBlob::operator[](int)const __ptr64 
??ACSmallArrayBlob@@QEBAPEAXH@Z
; public: unsigned short *__ptr64 __cdecl CWStringArray::operator[](int)const __ptr64 
??ACWStringArray@@QEBAPEAGH@Z
; public: void __cdecl CHex::operator long(...)__ptr64 throw()
??BCHex@@QEAAJXZ
; public: void __cdecl CVar::operator struct _FILETIME(...)__ptr64 throw()
??BCVar@@QEAA?AU_FILETIME@@XZ
; public: void __cdecl CVar::operator char(...)__ptr64 throw()
??BCVar@@QEAADXZ
; public: void __cdecl CVar::operator unsigned char(...)__ptr64 throw()
??BCVar@@QEAAEXZ
; public: void __cdecl CVar::operator short(...)__ptr64 throw()
??BCVar@@QEAAFXZ
; public: void __cdecl CVar::operator unsigned short(...)__ptr64 throw()
??BCVar@@QEAAGXZ
; public: void __cdecl CVar::operator long(...)__ptr64 throw()
??BCVar@@QEAAJXZ
; public: void __cdecl CVar::operator unsigned long(...)__ptr64 throw()
??BCVar@@QEAAKXZ
; public: void __cdecl CVar::operator float(...)__ptr64 throw()
??BCVar@@QEAAMXZ
; public: void __cdecl CVar::operator double(...)__ptr64 throw()
??BCVar@@QEAANXZ
; public: void __cdecl CVar::operator char *__ptr64(...)__ptr64 throw()
??BCVar@@QEAAPEADXZ
; public: void __cdecl CVar::operator unsigned short *__ptr64(...)__ptr64 throw()
??BCVar@@QEAAPEAGXZ
; public: void __cdecl CVar::operator struct _GUID *__ptr64(...)__ptr64 throw()
??BCVar@@QEAAPEAU_GUID@@XZ
; public: void __cdecl CVar::operator struct tagBLOB *__ptr64(...)__ptr64 throw()
??BCVar@@QEAAPEAUtagBLOB@@XZ
; public: void __cdecl CVar::operator class CVarVector *__ptr64(...)__ptr64 throw()
??BCVar@@QEAAPEAVCVarVector@@XZ
; public: void __cdecl WString::operator unsigned short *__ptr64(...)__ptr64 throw()
??BWString@@QEAAPEAGXZ
; public: void __cdecl WString::operator unsigned short const *__ptr64(...)const __ptr64 throw()
??BWString@@QEBAPEBGXZ
; public: class CWbemInterval __cdecl CWbemInterval::operator *(double)const __ptr64 
??DCWbemInterval@@QEBA?AV0@N@Z
; public: class CWbemInterval __cdecl CWbemTime::operator -(class CWbemTime const &__ptr64 )const __ptr64 
??GCWbemTime@@QEBA?AVCWbemInterval@@AEBV0@@Z
; public: class CWbemInterval __cdecl CWbemInterval::operator +(class CWbemInterval)const __ptr64 
??HCWbemInterval@@QEBA?AV0@V0@@Z
; public: int __cdecl CWbemInterval::operator <(class CWbemInterval)__ptr64 
??MCWbemInterval@@QEAAHV0@@Z
; public: int __cdecl CWbemTime::operator <(class CWbemTime const &__ptr64 )const __ptr64 
??MCWbemTime@@QEBAHAEBV0@@Z
; public: int __cdecl WString::operator <(unsigned short const *__ptr64)const __ptr64 
??MWString@@QEBAHPEBG@Z
; public: int __cdecl CWbemTime::operator <=(class CWbemTime const &__ptr64 )const __ptr64 
??NCWbemTime@@QEBAHAEBV0@@Z
; public: int __cdecl WString::operator <=(unsigned short const *__ptr64)const __ptr64 
??NWString@@QEBAHPEBG@Z
; public: int __cdecl CWbemInterval::operator >(class CWbemInterval)__ptr64 
??OCWbemInterval@@QEAAHV0@@Z
; public: int __cdecl CWbemTime::operator >(class CWbemTime const &__ptr64 )const __ptr64 
??OCWbemTime@@QEBAHAEBV0@@Z
; public: int __cdecl WString::operator >(unsigned short const *__ptr64)const __ptr64 
??OWString@@QEBAHPEBG@Z
; public: int __cdecl CWbemTime::operator >=(class CWbemTime const &__ptr64 )const __ptr64 
??PCWbemTime@@QEBAHAEBV0@@Z
; public: int __cdecl WString::operator >=(unsigned short const *__ptr64)const __ptr64 
??PWString@@QEBAHPEBG@Z
; public: void __cdecl CWbemInterval::operator +=(class CWbemInterval)__ptr64 
??YCWbemInterval@@QEAAXV0@@Z
; const C9XAce::$vftable
??_7C9XAce@@6B@ DATA
; const CArena::$vftable
??_7CArena@@6B@ DATA
; const CBaseAce::$vftable
??_7CBaseAce@@6B@ DATA
; const CContainerControl::$vftable
??_7CContainerControl@@6B@ DATA
; const CHaltable::$vftable
??_7CHaltable@@6B@ DATA
; const CLifeControl::$vftable
??_7CLifeControl@@6B@ DATA
; const CNtAce::$vftable
??_7CNtAce@@6B@ DATA
; const CUnk::$vftable
??_7CUnk@@6B@ DATA
; const CUnkInternal::$vftable
??_7CUnkInternal@@6B@ DATA
; const CWin32DefaultArena::$vftable
??_7CWin32DefaultArena@@6B@ DATA
; public: void __cdecl CEventLog::__dflt_ctor_closure(void)__ptr64 
??_FCEventLog@@QEAAXXZ
; public: void __cdecl CFlexArray::__dflt_ctor_closure(void)__ptr64 
??_FCFlexArray@@QEAAXXZ
; public: void __cdecl CFlexQueue::__dflt_ctor_closure(void)__ptr64 
??_FCFlexQueue@@QEAAXXZ
; public: void __cdecl CNtAcl::__dflt_ctor_closure(void)__ptr64 
??_FCNtAcl@@QEAAXXZ
; public: void __cdecl CUnk::__dflt_ctor_closure(void)__ptr64 
??_FCUnk@@QEAAXXZ
; public: void __cdecl CWStringArray::__dflt_ctor_closure(void)__ptr64 
??_FCWStringArray@@QEAAXXZ
; public: long __cdecl CSafeArray::Access(void *__ptr64 *__ptr64)__ptr64 
?Access@CSafeArray@@QEAAJPEAPEAX@Z
; public: int __cdecl CFlexArray::Add(void *__ptr64)__ptr64 
?Add@CFlexArray@@QEAAHPEAX@Z
; public: int __cdecl CSafeArray::AddBool(short)__ptr64 
?AddBool@CSafeArray@@QEAAHF@Z
; public: int __cdecl CSafeArray::AddByte(unsigned char)__ptr64 
?AddByte@CSafeArray@@QEAAHE@Z
; public: int __cdecl CSafeArray::AddDouble(double)__ptr64 
?AddDouble@CSafeArray@@QEAAHN@Z
; public: int __cdecl CSafeArray::AddFloat(float)__ptr64 
?AddFloat@CSafeArray@@QEAAHM@Z
; public: int __cdecl CSafeArray::AddLong(long)__ptr64 
?AddLong@CSafeArray@@QEAAHJ@Z
; public: virtual void __cdecl CContainerControl::AddRef(struct IUnknown *__ptr64)__ptr64 
?AddRef@CContainerControl@@UEAAXPEAUIUnknown@@@Z
; public: virtual unsigned long __cdecl CUnkInternal::AddRef(void)__ptr64 
?AddRef@CUnkInternal@@UEAAKXZ
; public: int __cdecl CSafeArray::AddShort(short)__ptr64 
?AddShort@CSafeArray@@QEAAHF@Z
; public: virtual void *__ptr64 __cdecl CWin32DefaultArena::Alloc(unsigned __int64)__ptr64 
?Alloc@CWin32DefaultArena@@UEAAPEAX_K@Z
; public: void __cdecl WString::BindPtr(unsigned short *__ptr64)__ptr64 
?BindPtr@WString@@QEAAXPEAG@Z
; public: int __cdecl CVar::CanDelete(void)__ptr64 
?CanDelete@CVar@@QEAAHXZ
; public: void __cdecl CWStringArray::Compress(void)__ptr64 
?Compress@CWStringArray@@QEAAXXZ
; protected: void __cdecl CFlexQueue::DecrementIndex(int &__ptr64 )__ptr64 
?DecrementIndex@CFlexQueue@@IEAAXAEAH@Z
DredgeRA
; public: int __cdecl CSafeArray::ElementSize(void)__ptr64 
?ElementSize@CSafeArray@@QEAAHXZ
; public: void __cdecl CCheckedInCritSec::Enter(void)__ptr64 
?Enter@CCheckedInCritSec@@QEAAXXZ
; public: void __cdecl CCritSec::Enter(void)__ptr64 
?Enter@CCritSec@@QEAAXXZ
; public: int __cdecl WString::Equal(unsigned short const *__ptr64)const __ptr64 
?Equal@WString@@QEBAHPEBG@Z
; public: int __cdecl WString::EqualNoCase(unsigned short const *__ptr64)const __ptr64 
?EqualNoCase@WString@@QEBAHPEBG@Z
; public: virtual int __cdecl CWin32DefaultArena::Free(void *__ptr64)__ptr64 
?Free@CWin32DefaultArena@@UEAAHPEAX@Z
; public: __int64 __cdecl CWbemTime::Get100nss(void)const __ptr64 
?Get100nss@CWbemTime@@QEBA_JXZ
; public: virtual unsigned long __cdecl C9XAce::GetAccessMask(void)__ptr64 
?GetAccessMask@C9XAce@@UEAAKXZ
; public: unsigned long __cdecl CWMITraceSettings::GetAreaFlags(void)__ptr64 
?GetAreaFlags@CWMITraceSettings@@QEAAKXZ
; public: struct tagSAFEARRAY *__ptr64 __cdecl CSafeArray::GetArray(void)__ptr64 
?GetArray@CSafeArray@@QEAAPEAUtagSAFEARRAY@@XZ
; public: void *__ptr64 *__ptr64 __cdecl CFlexArray::GetArrayPtr(void)__ptr64 
?GetArrayPtr@CFlexArray@@QEAAPEAPEAXXZ
; public: void *__ptr64 const *__ptr64 __cdecl CFlexArray::GetArrayPtr(void)const __ptr64 
?GetArrayPtr@CFlexArray@@QEBAPEBQEAXXZ
; public: void *__ptr64 *__ptr64 __cdecl CSmallArrayBlob::GetArrayPtr(void)__ptr64 
?GetArrayPtr@CSmallArrayBlob@@QEAAPEAPEAXXZ
; public: void *__ptr64 const *__ptr64 __cdecl CSmallArrayBlob::GetArrayPtr(void)const __ptr64 
?GetArrayPtr@CSmallArrayBlob@@QEBAPEBQEAXXZ
; public: unsigned short const *__ptr64 *__ptr64 __cdecl CWStringArray::GetArrayPtr(void)__ptr64 
?GetArrayPtr@CWStringArray@@QEAAPEAPEBGXZ
; public: void *__ptr64 __cdecl CSmallArrayBlob::GetAt(int)const __ptr64 
?GetAt@CSmallArrayBlob@@QEBAPEAXH@Z
; public: unsigned short *__ptr64 __cdecl CWStringArray::GetAt(int)const __ptr64 
?GetAt@CWStringArray@@QEBAPEAGH@Z
; public: struct tagBLOB *__ptr64 __cdecl CVar::GetBlob(void)__ptr64 
?GetBlob@CVar@@QEAAPEAUtagBLOB@@XZ
; public: short __cdecl CVar::GetBool(void)__ptr64 
?GetBool@CVar@@QEAAFXZ
; public: short __cdecl CSafeArray::GetBoolAt(int)__ptr64 
?GetBoolAt@CSafeArray@@QEAAFH@Z
; public: unsigned char __cdecl CVar::GetByte(void)__ptr64 
?GetByte@CVar@@QEAAEXZ
; public: unsigned char __cdecl CSafeArray::GetByteAt(int)__ptr64 
?GetByteAt@CSafeArray@@QEAAEH@Z
; public: char __cdecl CVar::GetChar(void)__ptr64 
?GetChar@CVar@@QEAADXZ
; public: struct _GUID *__ptr64 __cdecl CVar::GetClsId(void)__ptr64 
?GetClsId@CVar@@QEAAPEAU_GUID@@XZ
; public: class CWbemTime __cdecl CEventLogRecord::GetCreationTime(void)__ptr64 
?GetCreationTime@CEventLogRecord@@QEAA?AVCWbemTime@@XZ
; public: unsigned long __cdecl CVar::GetDWORD(void)__ptr64 
?GetDWORD@CVar@@QEAAKXZ
; public: struct IDispatch *__ptr64 __cdecl CVar::GetDispatch(void)__ptr64 
?GetDispatch@CVar@@QEAAPEAUIDispatch@@XZ
; public: double __cdecl CVar::GetDouble(void)__ptr64 
?GetDouble@CVar@@QEAANXZ
; public: double __cdecl CSafeArray::GetDoubleAt(int)__ptr64 
?GetDoubleAt@CSafeArray@@QEAANH@Z
; public: struct IUnknown *__ptr64 __cdecl CVar::GetEmbeddedObject(void)__ptr64 
?GetEmbeddedObject@CVar@@QEAAPEAUIUnknown@@XZ
; public: struct _EVENT_TRACE_PROPERTIES *__ptr64 __cdecl CWMITraceSettings::GetEventTraceProperties(void)__ptr64 
?GetEventTraceProperties@CWMITraceSettings@@QEAAPEAU_EVENT_TRACE_PROPERTIES@@XZ
; public: struct _FILETIME __cdecl CVar::GetFileTime(void)__ptr64 
?GetFileTime@CVar@@QEAA?AU_FILETIME@@XZ
; public: virtual int __cdecl C9XAce::GetFlags(void)__ptr64 
?GetFlags@C9XAce@@UEAAHXZ
; public: float __cdecl CVar::GetFloat(void)__ptr64 
?GetFloat@CVar@@QEAAMXZ
; public: float __cdecl CSafeArray::GetFloatAt(int)__ptr64 
?GetFloatAt@CSafeArray@@QEAAMH@Z
; public: static class CWbemInterval __cdecl CWbemInterval::GetInfinity(void)
?GetInfinity@CWbemInterval@@SA?AV1@XZ
; public: static class CWbemTime __cdecl CWbemTime::GetInfinity(void)
?GetInfinity@CWbemTime@@SA?AV1@XZ
; public: struct IUnknown *__ptr64 __cdecl CUnk::GetInnerUnknown(void)__ptr64 
?GetInnerUnknown@CUnk@@QEAAPEAUIUnknown@@XZ
; public: char *__ptr64 __cdecl CVar::GetLPSTR(void)__ptr64 
?GetLPSTR@CVar@@QEAAPEADXZ
; public: unsigned short *__ptr64 __cdecl CVar::GetLPWSTR(void)__ptr64 
?GetLPWSTR@CVar@@QEAAPEAGXZ
; public: long __cdecl Registry::GetLastError(void)__ptr64 
?GetLastError@Registry@@QEAAJXZ
; public: long __cdecl CWbemCriticalSection::GetLockCount(void)__ptr64 
?GetLockCount@CWbemCriticalSection@@QEAAJXZ
; public: long __cdecl CVar::GetLong(void)__ptr64 
?GetLong@CVar@@QEAAJXZ
; public: long __cdecl CSafeArray::GetLongAt(int)__ptr64 
?GetLongAt@CSafeArray@@QEAAJH@Z
; public: unsigned long __cdecl CWbemInterval::GetMilliseconds(void)const __ptr64 
?GetMilliseconds@CWbemInterval@@QEBAKXZ
; public: unsigned short __cdecl CEventLogRecord::GetNumStrings(void)__ptr64 
?GetNumStrings@CEventLogRecord@@QEAAGXZ
; public: unsigned long __cdecl CWbemCriticalSection::GetOwningThreadId(void)__ptr64 
?GetOwningThreadId@CWbemCriticalSection@@QEAAKXZ
; public: struct _ACCESS_ALLOWED_ACE *__ptr64 __cdecl CNtAce::GetPtr(void)__ptr64 
?GetPtr@CNtAce@@QEAAPEAU_ACCESS_ALLOWED_ACE@@XZ
; public: struct _ACL *__ptr64 __cdecl CNtAcl::GetPtr(void)__ptr64 
?GetPtr@CNtAcl@@QEAAPEAU_ACL@@XZ
; public: void *__ptr64 __cdecl CNtSecurityDescriptor::GetPtr(void)__ptr64 
?GetPtr@CNtSecurityDescriptor@@QEAAPEAXXZ
; public: void *__ptr64 __cdecl CNtSid::GetPtr(void)__ptr64 
?GetPtr@CNtSid@@QEAAPEAXXZ
; public: int __cdecl CFlexQueue::GetQueueSize(void)const __ptr64 
?GetQueueSize@CFlexQueue@@QEBAHXZ
; public: void *__ptr64 __cdecl CVar::GetRawData(void)__ptr64 
?GetRawData@CVar@@QEAAPEAXXZ
; public: long __cdecl CWbemCriticalSection::GetRecursionCount(void)__ptr64 
?GetRecursionCount@CWbemCriticalSection@@QEAAJXZ
; public: unsigned long __cdecl CWbemInterval::GetSeconds(void)const __ptr64 
?GetSeconds@CWbemInterval@@QEBAKXZ
; public: unsigned short *__ptr64 __cdecl CWMITraceSettings::GetSessionName(void)__ptr64 
?GetSessionName@CWMITraceSettings@@QEAAPEAGXZ
; public: short __cdecl CVar::GetShort(void)__ptr64 
?GetShort@CVar@@QEAAFXZ
; public: short __cdecl CSafeArray::GetShortAt(int)__ptr64 
?GetShortAt@CSafeArray@@QEAAFH@Z
; public: unsigned long __cdecl CNtAce::GetSize(void)__ptr64 
?GetSize@CNtAce@@QEAAKXZ
; public: virtual unsigned long __cdecl C9XAce::GetStatus(void)__ptr64 
?GetStatus@C9XAce@@UEAAKXZ
; public: virtual unsigned long __cdecl CNtAce::GetStatus(void)__ptr64 
?GetStatus@CNtAce@@UEAAKXZ
; public: unsigned long __cdecl CNtAcl::GetStatus(void)__ptr64 
?GetStatus@CNtAcl@@QEAAKXZ
; public: unsigned long __cdecl CNtSecurityDescriptor::GetStatus(void)__ptr64 
?GetStatus@CNtSecurityDescriptor@@QEAAKXZ
; public: unsigned long __cdecl CNtSid::GetStatus(void)__ptr64 
?GetStatus@CNtSid@@QEAAKXZ
; public: unsigned short const *__ptr64 __cdecl CInsertionString::GetString(void)__ptr64 
?GetString@CInsertionString@@QEAAPEBGXZ
; public: unsigned short const *__ptr64 const &__ptr64 __cdecl WString::GetStringPointerByRef(void)const __ptr64 
?GetStringPointerByRef@WString@@QEBAAEBQEBGXZ
; public: unsigned char __cdecl CWMITraceSettings::GetTraceLevel(void)__ptr64 
?GetTraceLevel@CWMITraceSettings@@QEAAEXZ
; public: virtual int __cdecl C9XAce::GetType(void)__ptr64 
?GetType@C9XAce@@UEAAHXZ
; public: int __cdecl CSafeArray::GetType(void)__ptr64 
?GetType@CSafeArray@@QEAAHXZ
; public: int __cdecl CVar::GetType(void)__ptr64 
?GetType@CVar@@QEAAHXZ
; public: int __cdecl CVarVector::GetType(void)__ptr64 
?GetType@CVarVector@@QEAAHXZ
; public: struct IUnknown *__ptr64 __cdecl CUnk::GetUnknown(void)__ptr64 
?GetUnknown@CUnk@@QEAAPEAUIUnknown@@XZ
; public: struct IUnknown *__ptr64 __cdecl CUnkInternal::GetUnknown(void)__ptr64 
?GetUnknown@CUnkInternal@@QEAAPEAUIUnknown@@XZ
; public: struct IUnknown *__ptr64 __cdecl CVar::GetUnknown(void)__ptr64 
?GetUnknown@CVar@@QEAAPEAUIUnknown@@XZ
; public: class CVarVector *__ptr64 __cdecl CVar::GetVarVector(void)__ptr64 
?GetVarVector@CVar@@QEAAPEAVCVarVector@@XZ
; public: unsigned short __cdecl CVar::GetWord(void)__ptr64 
?GetWord@CVar@@QEAAGXZ
; public: static class CWbemTime __cdecl CWbemTime::GetZero(void)
?GetZero@CWbemTime@@SA?AV1@XZ
; protected: void __cdecl CFlexQueue::IncrementIndex(int &__ptr64 )__ptr64 
?IncrementIndex@CFlexQueue@@IEAAXAEAH@Z
; public: unsigned long __cdecl CUnkInternal::InternalAddRef(void)__ptr64 
?InternalAddRef@CUnkInternal@@QEAAKXZ
; public: long __cdecl CUnkInternal::InternalQueryInterface(struct _GUID const &__ptr64 ,void *__ptr64 *__ptr64)__ptr64 
?InternalQueryInterface@CUnkInternal@@QEAAJAEBU_GUID@@PEAPEAX@Z
; public: unsigned long __cdecl CUnkInternal::InternalRelease(void)__ptr64 
?InternalRelease@CUnkInternal@@QEAAKXZ
; public: int __cdecl CInsertionString::IsEmpty(void)__ptr64 
?IsEmpty@CInsertionString@@QEAAHXZ
; public: bool __cdecl CTraceSessionControl::IsEnabled(void)__ptr64 
?IsEnabled@CTraceSessionControl@@QEAA_NXZ
; public: int __cdecl CCheckedInCritSec::IsEntered(void)__ptr64 
?IsEntered@CCheckedInCritSec@@QEAAHXZ
; public: int __cdecl CEnterWbemCriticalSection::IsEntered(void)__ptr64 
?IsEntered@CEnterWbemCriticalSection@@QEAAHXZ
; public: int __cdecl CWbemInterval::IsFinite(void)const __ptr64 
?IsFinite@CWbemInterval@@QEBAHXZ
; public: int __cdecl CWbemTime::IsFinite(void)const __ptr64 
?IsFinite@CWbemTime@@QEBAHXZ
; public: int __cdecl CVar::IsNull(void)__ptr64 
?IsNull@CVar@@QEAAHXZ
; public: int __cdecl CVarVector::IsOptimized(void)__ptr64 
?IsOptimized@CVarVector@@QEAAHXZ
IsShutDown
; public: bool __cdecl CNtSid::IsUser(void)__ptr64 
?IsUser@CNtSid@@QEAA_NXZ
; public: int __cdecl CNtAcl::IsValid(void)__ptr64 
?IsValid@CNtAcl@@QEAAHXZ
; public: int __cdecl CNtSecurityDescriptor::IsValid(void)__ptr64 
?IsValid@CNtSecurityDescriptor@@QEAAHXZ
; public: int __cdecl CNtSid::IsValid(void)__ptr64 
?IsValid@CNtSid@@QEAAHXZ
; public: int __cdecl CWbemInterval::IsZero(void)const __ptr64 
?IsZero@CWbemInterval@@QEBAHXZ
; public: int __cdecl CWbemTime::IsZero(void)const __ptr64 
?IsZero@CWbemTime@@QEBAHXZ
; public: void __cdecl CCheckedInCritSec::Leave(void)__ptr64 
?Leave@CCheckedInCritSec@@QEAAXXZ
; public: void __cdecl CCritSec::Leave(void)__ptr64 
?Leave@CCritSec@@QEAAXXZ
; public: int __cdecl WString::Length(void)const __ptr64 
?Length@WString@@QEBAHXZ
MoveToAlone
MoveToShared
; public: virtual int __cdecl CContainerControl::ObjectCreated(struct IUnknown *__ptr64)__ptr64 
?ObjectCreated@CContainerControl@@UEAAHPEAUIUnknown@@@Z
; public: virtual void __cdecl CContainerControl::ObjectDestroyed(struct IUnknown *__ptr64)__ptr64 
?ObjectDestroyed@CContainerControl@@UEAAXPEAUIUnknown@@@Z
; public: virtual int __cdecl CUnk::OnInitialize(void)__ptr64 
?OnInitialize@CUnk@@UEAAHXZ
; public: virtual long __cdecl CUnkInternal::QueryInterface(struct _GUID const &__ptr64 ,void *__ptr64 *__ptr64)__ptr64 
?QueryInterface@CUnkInternal@@UEAAJAEBU_GUID@@PEAPEAX@Z
; public: virtual void *__ptr64 __cdecl CWin32DefaultArena::Realloc(void *__ptr64,unsigned __int64)__ptr64 
?Realloc@CWin32DefaultArena@@UEAAPEAXPEAX_K@Z
; public: virtual void __cdecl CContainerControl::Release(struct IUnknown *__ptr64)__ptr64 
?Release@CContainerControl@@UEAAXPEAUIUnknown@@@Z
; public: virtual unsigned long __cdecl CUnkInternal::Release(void)__ptr64 
?Release@CUnkInternal@@UEAAKXZ
ServiceMain
; public: void __cdecl CWbemTime::Set100nss(__int64)__ptr64 
?Set100nss@CWbemTime@@QEAAX_J@Z
; public: void __cdecl CWMITraceSettings::SetAreaFlags(unsigned long)__ptr64 
?SetAreaFlags@CWMITraceSettings@@QEAAXK@Z
; public: void __cdecl CVar::SetAsNull(void)__ptr64 
?SetAsNull@CVar@@QEAAXXZ
; public: void __cdecl CVar::SetBool(short)__ptr64 
?SetBool@CVar@@QEAAXF@Z
; public: int __cdecl CSafeArray::SetBoolAt(int,short)__ptr64 
?SetBoolAt@CSafeArray@@QEAAHHF@Z
; public: void __cdecl CVar::SetByte(unsigned char)__ptr64 
?SetByte@CVar@@QEAAXE@Z
; public: int __cdecl CSafeArray::SetByteAt(int,unsigned char)__ptr64 
?SetByteAt@CSafeArray@@QEAAHHE@Z
; public: void __cdecl CVar::SetCanDelete(int)__ptr64 
?SetCanDelete@CVar@@QEAAXH@Z
; public: void __cdecl CVar::SetChar(char)__ptr64 
?SetChar@CVar@@QEAAXD@Z
; public: void __cdecl CVar::SetDWORD(unsigned long)__ptr64 
?SetDWORD@CVar@@QEAAXK@Z
; public: void __cdecl CSafeArray::SetDestructorPolicy(int)__ptr64 
?SetDestructorPolicy@CSafeArray@@QEAAXH@Z
; public: void __cdecl CVar::SetDouble(double)__ptr64 
?SetDouble@CVar@@QEAAXN@Z
; public: int __cdecl CSafeArray::SetDoubleAt(int,double)__ptr64 
?SetDoubleAt@CSafeArray@@QEAAHHN@Z
; public: void __cdecl CVar::SetEmbeddedObject(struct IUnknown *__ptr64)__ptr64 
?SetEmbeddedObject@CVar@@QEAAXPEAUIUnknown@@@Z
; public: void __cdecl CVar::SetFileTime(struct _FILETIME *__ptr64)__ptr64 
?SetFileTime@CVar@@QEAAXPEAU_FILETIME@@@Z
; public: virtual void __cdecl C9XAce::SetFlags(long)__ptr64 
?SetFlags@C9XAce@@UEAAXJ@Z
; public: virtual void __cdecl CNtAce::SetFlags(long)__ptr64 
?SetFlags@CNtAce@@UEAAXJ@Z
; public: void __cdecl CVar::SetFloat(float)__ptr64 
?SetFloat@CVar@@QEAAXM@Z
; public: int __cdecl CSafeArray::SetFloatAt(int,float)__ptr64 
?SetFloatAt@CSafeArray@@QEAAHHM@Z
; public: void __cdecl CSafeArray::SetGrowGranularity(int)__ptr64 
?SetGrowGranularity@CSafeArray@@QEAAXH@Z
; public: void __cdecl CVar::SetLong(long)__ptr64 
?SetLong@CVar@@QEAAXJ@Z
; public: int __cdecl CSafeArray::SetLongAt(int,long)__ptr64 
?SetLongAt@CSafeArray@@QEAAHHJ@Z
; public: void __cdecl CWbemInterval::SetMilliseconds(unsigned long)__ptr64 
?SetMilliseconds@CWbemInterval@@QEAAXK@Z
; public: void __cdecl CSafeArray::SetRawArrayMaxElement(int)__ptr64 
?SetRawArrayMaxElement@CSafeArray@@QEAAXH@Z
; public: void __cdecl CVar::SetShort(short)__ptr64 
?SetShort@CVar@@QEAAXF@Z
; public: int __cdecl CSafeArray::SetShortAt(int,short)__ptr64 
?SetShortAt@CSafeArray@@QEAAHHF@Z
; public: void __cdecl CFlexArray::SetSize(int)__ptr64 
?SetSize@CFlexArray@@QEAAXH@Z
; public: void __cdecl CWMITraceSettings::SetTraceLevel(unsigned char)__ptr64 
?SetTraceLevel@CWMITraceSettings@@QEAAXE@Z
; public: void __cdecl CVar::SetWord(unsigned short)__ptr64 
?SetWord@CVar@@QEAAXG@Z
; public: int __cdecl CFlexArray::Size(void)const __ptr64 
?Size@CFlexArray@@QEBAHXZ
; public: int __cdecl CSafeArray::Size(void)__ptr64 
?Size@CSafeArray@@QEAAHXZ
; public: int __cdecl CSmallArrayBlob::Size(void)const __ptr64 
?Size@CSmallArrayBlob@@QEBAHXZ
; public: int __cdecl CWStringArray::Size(void)const __ptr64 
?Size@CWStringArray@@QEBAHXZ
; public: int __cdecl CSafeArray::Status(void)__ptr64 
?Status@CSafeArray@@QEAAHXZ
; public: int __cdecl CVar::Status(void)__ptr64 
?Status@CVar@@QEAAHXZ
; public: int __cdecl CVarVector::Status(void)__ptr64 
?Status@CVarVector@@QEAAHXZ
; public: long __cdecl CSafeArray::Unaccess(void)__ptr64 
?Unaccess@CSafeArray@@QEAAJXZ
; public: void *__ptr64 __cdecl CFlexQueue::Unqueue(void)__ptr64 
?Unqueue@CFlexQueue@@QEAAPEAXXZ
; public: static void __cdecl CWin32DefaultArena::WbemSysFreeString(unsigned short *__ptr64)
?WbemSysFreeString@CWin32DefaultArena@@SAXPEAG@Z
; public: bool __cdecl CHaltable::isValid(void)__ptr64 
?isValid@CHaltable@@QEAA_NXZ
; DllRegisterServer
; DllUnregisterServer
GetSystemEventsForShutdown
IsImproperShutdownDetected
